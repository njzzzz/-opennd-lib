{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.47.0",
    "schemaVersion": 1011,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@opennd/lib!",
  "docComment": "",
  "name": "@opennd/lib",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@opennd/lib!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!excelCursorStream:function(1)",
          "docComment": "/**\n * @description express mongodb 流式导出 excel\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function excelCursorStream({ req, res, headers, sheetName, dataHeaderIndex, zlibLevel, merges, cursor, filename, width, }: "
            },
            {
              "kind": "Reference",
              "text": "ExcelStreamArs",
              "canonicalReference": "@opennd/lib!ExcelStreamArs:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<void>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/excel.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 5
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "{ req, res, headers, sheetName, dataHeaderIndex, zlibLevel, merges, cursor, filename, width, }",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "excelCursorStream"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@opennd/lib!ExcelStreamArs:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface ExcelStreamArs "
            }
          ],
          "fileUrlPath": "lib/excel.ts",
          "releaseTag": "Public",
          "name": "ExcelStreamArs",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#cursor:member",
              "docComment": "/**\n * @description mongoose cursor\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "cursor: "
                },
                {
                  "kind": "Content",
                  "text": "any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cursor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#dataHeaderIndex:member",
              "docComment": "/**\n * @description 使用第几个header取值,默认为 headers.length - 1\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataHeaderIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dataHeaderIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#filename:member",
              "docComment": "/**\n * excel 文件名\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filename: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "filename",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#headers:member",
              "docComment": "/**\n * @description 表头配置，支持多级表头\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headers: "
                },
                {
                  "kind": "Reference",
                  "text": "Header",
                  "canonicalReference": "@opennd/lib!Header:interface"
                },
                {
                  "kind": "Content",
                  "text": "[][]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "headers",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#merges:member",
              "docComment": "/**\n * @description 合并表头配置\n *\n * @example\n *\n * ['A1:D1', 'A2:D2']\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "merges?: "
                },
                {
                  "kind": "Content",
                  "text": "string[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "merges",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#req:member",
              "docComment": "/**\n * @description express 的 req\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "req: "
                },
                {
                  "kind": "Reference",
                  "text": "Request",
                  "canonicalReference": "@types/express!e.Request:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "req",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#res:member",
              "docComment": "/**\n * express res  @description express 的 res\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "res: "
                },
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "@types/express!e.Response:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "res",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#sheetName:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sheetName?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "sheetName",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#width:member",
              "docComment": "/**\n * @description 表格列全局宽度\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!ExcelStreamArs#zlibLevel:member",
              "docComment": "/**\n * @description 压缩等级\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "zlibLevel?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "zlibLevel",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!func:function(1)",
          "docComment": "/**\n * @description 空函数\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function func(): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "func"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!getFirstNotUndefinedValue:function(1)",
          "docComment": "/**\n * 获取数组中第一个值不为undefine的项\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getFirstNotUndefinedValue<T>(arr: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "getFirstNotUndefinedValue"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!getPropByPath:function(1)",
          "docComment": "/**\n * @description 使用字符串点操作获取对象中属性\n *\n * @example\n *\n * getPropByPath(obj, 'a.b.c')\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function getPropByPath(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", strict: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "{\n    o: any;\n    k: string;\n    v: any;\n}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "strict",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "getPropByPath"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!getValueByPath:function(1)",
          "docComment": "/**\n * @description 使用字符串点操作获取对象中的值\n *\n * @example\n *\n * getValueByPath(obj, 'a.b.c')\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "getValueByPath: (object: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", prop: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Content",
              "text": "any"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "object",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "prop",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "getValueByPath"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@opennd/lib!Header:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface Header "
            }
          ],
          "fileUrlPath": "lib/excel.ts",
          "releaseTag": "Public",
          "name": "Header",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#bgColor:member",
              "docComment": "/**\n * @description 表格标题列背景色 设置为false则不使用背景色\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bgColor?: "
                },
                {
                  "kind": "Content",
                  "text": "false | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bgColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#bold:member",
              "docComment": "/**\n * @description 数值列字体是否加粗\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "bold?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "bold",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#border:member",
              "docComment": "/**\n * @description 数值列是否带边框\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "border?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "border",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#dataIndex:member",
              "docComment": "/**\n * @description 数值列取值key\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "dataIndex?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dataIndex",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#headerBgColor:member",
              "docComment": "/**\n * @description 表头背景色 设置为false则不使用背景色\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerBgColor?: "
                },
                {
                  "kind": "Content",
                  "text": "false | string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headerBgColor",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#headerBold:member",
              "docComment": "/**\n * @description 表格标题字体是否加粗\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerBold?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headerBold",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#headerBorder:member",
              "docComment": "/**\n * @description 表格标题列是否带边框\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerBorder?: "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headerBorder",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#headerHorizontal:member",
              "docComment": "/**\n * @description 表格标题列水平布局\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerHorizontal?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExcelJS.Alignment",
                  "canonicalReference": "exceljs!Alignment:interface"
                },
                {
                  "kind": "Content",
                  "text": "['horizontal']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headerHorizontal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#headerSize:member",
              "docComment": "/**\n * @description 表格标题列字体大小\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerSize?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headerSize",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#headerVertical:member",
              "docComment": "/**\n * @description 表格标题列垂直布局\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "headerVertical?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExcelJS.Alignment",
                  "canonicalReference": "exceljs!Alignment:interface"
                },
                {
                  "kind": "Content",
                  "text": "['vertical']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headerVertical",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#horizontal:member",
              "docComment": "/**\n * @description 数值列水平布局\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "horizontal?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExcelJS.Alignment",
                  "canonicalReference": "exceljs!Alignment:interface"
                },
                {
                  "kind": "Content",
                  "text": "['horizontal']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "horizontal",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#renderCell:member",
              "docComment": "/**\n * @description 表格数值列取值自定义,只对使用dataHeaderIndex指定的表头有效\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "renderCell?: "
                },
                {
                  "kind": "Content",
                  "text": "<T>(data: T) => any"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "renderCell",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#size:member",
              "docComment": "/**\n * @description 数值列字体大小\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "size?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#title:member",
              "docComment": "/**\n * @description 表格列标题\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "title: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "title",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#vertical:member",
              "docComment": "/**\n * @description 数值列垂直布局\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "vertical?: "
                },
                {
                  "kind": "Reference",
                  "text": "ExcelJS.Alignment",
                  "canonicalReference": "exceljs!Alignment:interface"
                },
                {
                  "kind": "Content",
                  "text": "['vertical']"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "vertical",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@opennd/lib!Header#width:member",
              "docComment": "/**\n * @description 表格列宽度\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "width?: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "width",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!isArray:function(1)",
          "docComment": "/**\n * @description 判断值是否为数组\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isArray(val: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isArray"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!isEmptyInput:function(1)",
          "docComment": "/**\n * @description 判断值是否是null|undefined|''\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isEmptyInput(val: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isEmptyInput"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!isEmptyObj:function(1)",
          "docComment": "/**\n * @description 判断是否是空对象\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isEmptyObj(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isEmptyObj"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!isNull:function(1)",
          "docComment": "/**\n * @description 判断值是否为null\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isNull(val: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isNull"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!isPlainObj:function(1)",
          "docComment": "/**\n * @description 判断值是否为对象\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isPlainObj(val: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isPlainObj"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!isStr:function(1)",
          "docComment": "/**\n * @description 判断值是否是string\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isStr(val: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isStr"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!isUndef:function(1)",
          "docComment": "/**\n * @description 判断值是否是undefined\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function isUndef(val: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "isUndef"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!noInputEmptyInArr:function(1)",
          "docComment": "/**\n * @description 判断数组中不包含undefined '' null\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function noInputEmptyInArr(arr: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "noInputEmptyInArr"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@opennd/lib!OPERATE:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type OPERATE = "
            },
            {
              "kind": "Content",
              "text": "'arrayType' | 'plainType' | 'dateType'"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/prisma.ts",
          "releaseTag": "Public",
          "name": "OPERATE",
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@opennd/lib!PrismaBuilder:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class PrismaBuilder<T, TableFields = "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "lib/prisma.ts",
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "TableFields",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            }
          ],
          "isAbstract": false,
          "name": "PrismaBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@opennd/lib!PrismaBuilder:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `PrismaBuilder` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor(source?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ", query?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "source",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "query",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 5
                  },
                  "isOptional": true
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#ADD:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ADD(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(t: this) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "ADD"
            },
            {
              "kind": "Property",
              "canonicalReference": "@opennd/lib!PrismaBuilder#assign:member",
              "docComment": "/**\n * @description 赋值\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "assign: "
                },
                {
                  "kind": "Content",
                  "text": "<RelationTableFields extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any> = "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>>({ key, filter, idKey, joinOrGetKey, operate, }: {\n        key: keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>;\n        joinOrGetKey?: string;\n        idKey?: keyof RelationTableFields;\n        filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "BooleanConstructor",
                  "canonicalReference": "!BooleanConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringConstructor",
                  "canonicalReference": "!StringConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NumberConstructor",
                  "canonicalReference": "!NumberConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        operate?: "
                },
                {
                  "kind": "Reference",
                  "text": "OPERATE",
                  "canonicalReference": "@opennd/lib!OPERATE:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n    }) => this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "assign",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 18
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@opennd/lib!PrismaBuilder#contains:member",
              "docComment": "/**\n * @description like查询 数组类型的值会join，默认使用”,’拼接，可在自定义\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "contains: "
                },
                {
                  "kind": "Content",
                  "text": "(key: keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>, joinOrGetKey?: string) => this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "contains",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#create:member(1)",
              "docComment": "/**\n * @description 创建create data,不要用于查询条件的构建, 回调函数中只能用create打头的函数\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "create(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(t: this) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "create"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#createRelation:member(1)",
              "docComment": "/**\n * 创建 connect\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createRelation<RelationTableFields extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>"
                },
                {
                  "kind": "Content",
                  "text": ", idKey: "
                },
                {
                  "kind": "Content",
                  "text": "keyof RelationTableFields"
                },
                {
                  "kind": "Content",
                  "text": ", filter: "
                },
                {
                  "kind": "Reference",
                  "text": "BooleanConstructor",
                  "canonicalReference": "!BooleanConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringConstructor",
                  "canonicalReference": "!StringConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NumberConstructor",
                  "canonicalReference": "!NumberConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": ", fn: "
                },
                {
                  "kind": "Content",
                  "text": "(t: this) => any"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RelationTableFields",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 23,
                "endIndex": 24
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "idKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 20
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 21,
                    "endIndex": 22
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createRelation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#createTime:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "createTime(key: "
                },
                {
                  "kind": "Content",
                  "text": "keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "createTime"
            },
            {
              "kind": "Property",
              "canonicalReference": "@opennd/lib!PrismaBuilder#equals:member",
              "docComment": "/**\n * @description 全等\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals: "
                },
                {
                  "kind": "Content",
                  "text": "(key: keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>, joinOrGetKey?: string) => this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "equals",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#in:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "in(key: "
                },
                {
                  "kind": "Content",
                  "text": "keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>"
                },
                {
                  "kind": "Content",
                  "text": ", idKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "BooleanConstructor",
                  "canonicalReference": "!BooleanConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringConstructor",
                  "canonicalReference": "!StringConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NumberConstructor",
                  "canonicalReference": "!NumberConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "idKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 14
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "in"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#NOT:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "NOT(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(t: this) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "NOT"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#notIn:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "notIn(key: "
                },
                {
                  "kind": "Content",
                  "text": "keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>"
                },
                {
                  "kind": "Content",
                  "text": ", idKey?: "
                },
                {
                  "kind": "Content",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "BooleanConstructor",
                  "canonicalReference": "!BooleanConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringConstructor",
                  "canonicalReference": "!StringConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NumberConstructor",
                  "canonicalReference": "!NumberConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "idKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 14
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "notIn"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#OR:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "OR(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(t: this) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "OR"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#query:member(1)",
              "docComment": "/**\n * 获取查询\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "query(): "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "query"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#relationAnd:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "relationAnd<RelationTableFields extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>"
                },
                {
                  "kind": "Content",
                  "text": ", idKey?: "
                },
                {
                  "kind": "Content",
                  "text": "keyof RelationTableFields"
                },
                {
                  "kind": "Content",
                  "text": ", filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "BooleanConstructor",
                  "canonicalReference": "!BooleanConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringConstructor",
                  "canonicalReference": "!StringConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NumberConstructor",
                  "canonicalReference": "!NumberConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RelationTableFields",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "idKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 20
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "relationAnd"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#relationNot:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "relationNot<RelationTableFields extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>"
                },
                {
                  "kind": "Content",
                  "text": ", idKey?: "
                },
                {
                  "kind": "Content",
                  "text": "keyof RelationTableFields"
                },
                {
                  "kind": "Content",
                  "text": ", filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "BooleanConstructor",
                  "canonicalReference": "!BooleanConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringConstructor",
                  "canonicalReference": "!StringConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NumberConstructor",
                  "canonicalReference": "!NumberConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RelationTableFields",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "idKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 20
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "relationNot"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#relationOr:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "relationOr<RelationTableFields extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ">(key: "
                },
                {
                  "kind": "Content",
                  "text": "keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>"
                },
                {
                  "kind": "Content",
                  "text": ", idKey?: "
                },
                {
                  "kind": "Content",
                  "text": "keyof RelationTableFields"
                },
                {
                  "kind": "Content",
                  "text": ", filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "BooleanConstructor",
                  "canonicalReference": "!BooleanConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringConstructor",
                  "canonicalReference": "!StringConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NumberConstructor",
                  "canonicalReference": "!NumberConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RelationTableFields",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 12
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "idKey",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": true
                },
                {
                  "parameterName": "filter",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 20
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "relationOr"
            },
            {
              "kind": "Method",
              "canonicalReference": "@opennd/lib!PrismaBuilder#set:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "set<RelationTableFields extends "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<string, any>"
                },
                {
                  "kind": "Content",
                  "text": ">({ joinOrGetKey, cb, filter, idKey, key, type, }: "
                },
                {
                  "kind": "Content",
                  "text": "{\n        key: keyof T | (keyof T)[] | "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof T, keyof TableFields>>;\n        idKey?: keyof RelationTableFields;\n        filter?: "
                },
                {
                  "kind": "Reference",
                  "text": "BooleanConstructor",
                  "canonicalReference": "!BooleanConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringConstructor",
                  "canonicalReference": "!StringConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "NumberConstructor",
                  "canonicalReference": "!NumberConstructor:interface"
                },
                {
                  "kind": "Content",
                  "text": ";\n        joinOrGetKey?: string;\n        type: "
                },
                {
                  "kind": "Reference",
                  "text": "OPERATE",
                  "canonicalReference": "@opennd/lib!OPERATE:type"
                },
                {
                  "kind": "Content",
                  "text": ";\n        cb: (query: any, k: string, val: any) => void;\n    }"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "RelationTableFields",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ joinOrGetKey, cb, filter, idKey, key, type, }",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 20
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "set"
            },
            {
              "kind": "Property",
              "canonicalReference": "@opennd/lib!PrismaBuilder#timeRange:member",
              "docComment": "/**\n * @description 时间区间查询\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "timeRange: "
                },
                {
                  "kind": "Content",
                  "text": "({ startTimeField, endTimeField, to }: {\n        startTimeField: keyof T;\n        endTimeField: keyof T;\n        to: keyof "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<TableFields, 'NOT' | 'OR' | 'AND'>;\n    }) => this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timeRange",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!realType:function(1)",
          "docComment": "/**\n * @description 获取数据类型\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function realType(may: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "may",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "realType"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!realTypeEqual:function(1)",
          "docComment": "/**\n * @description 判断类型是否为 type\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function realTypeEqual(may: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", type: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "may",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "type",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            }
          ],
          "name": "realTypeEqual"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!runFns:function(1)",
          "docComment": "/**\n * @description 执行多个同步函数\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function runFns(fns?: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": ", args?: "
            },
            {
              "kind": "Content",
              "text": "any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 5,
            "endIndex": 6
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "fns",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": true
            },
            {
              "parameterName": "args",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": true
            }
          ],
          "name": "runFns"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!setIfNotUndef:function(1)",
          "docComment": "/**\n * @description 当值不为undefined时，将值赋值给data[key]\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setIfNotUndef(data: "
            },
            {
              "kind": "Content",
              "text": "{}"
            },
            {
              "kind": "Content",
              "text": ", key: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "data",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "key",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "setIfNotUndef"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!setValueByPath:function(1)",
          "docComment": "/**\n * @description 使用字符串点操作获设置对象中属性, 中间不存在的属性值将被设为 {}\n *\n * @example\n *\n * setValueByPath(obj, 'a.b.c', 'value')\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function setValueByPath(obj: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ", path: "
            },
            {
              "kind": "Content",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", value: "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "obj",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            },
            {
              "parameterName": "path",
              "parameterTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isOptional": false
            },
            {
              "parameterName": "value",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false
            }
          ],
          "name": "setValueByPath"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!sid:function(1)",
          "docComment": "/**\n * @description 生成短的uuid\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function sid(): "
            },
            {
              "kind": "Reference",
              "text": "short.SUUID",
              "canonicalReference": "!\"\\\"short-uuid\\\"\".shortUUID.SUUID:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "sid"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!undefinedAndNotNullValueAsTrue:function(1)",
          "docComment": "/**\n * @description 判断传入的数组的每一项或单个值是否为undefined|!['', null].includes(val)\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function undefinedAndNotNullValueAsTrue(val: "
            },
            {
              "kind": "Content",
              "text": "string | any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "undefinedAndNotNullValueAsTrue"
        },
        {
          "kind": "Function",
          "canonicalReference": "@opennd/lib!undefinedAndTrueAsTrue:function(1)",
          "docComment": "/**\n * @description 判断传入的数组的每一项或单个值是否为undefined|true\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function undefinedAndTrueAsTrue(val: "
            },
            {
              "kind": "Content",
              "text": "boolean | any[]"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "lib/utils.ts",
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "val",
              "parameterTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "isOptional": false
            }
          ],
          "name": "undefinedAndTrueAsTrue"
        }
      ]
    }
  ]
}
